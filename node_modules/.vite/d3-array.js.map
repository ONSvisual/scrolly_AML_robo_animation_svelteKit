{
  "version": 3,
  "sources": ["../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/ascending.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/bisector.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/number.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/bisect.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/count.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/cross.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/cumsum.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/descending.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/variance.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/deviation.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/extent.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/fsum.js", "../../src/lib/vis/animated_pyramids/node_modules/internmap/src/index.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/identity.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/group.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/permute.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/sort.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/groupSort.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/array.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/constant.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/ticks.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/nice.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/threshold/sturges.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/bin.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/max.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/min.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/quickselect.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/quantile.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/threshold/freedmanDiaconis.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/threshold/scott.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/maxIndex.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/mean.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/median.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/merge.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/minIndex.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/mode.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/pairs.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/range.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/rank.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/least.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/leastIndex.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/greatest.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/greatestIndex.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/scan.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/shuffle.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/sum.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/transpose.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/zip.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/every.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/some.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/filter.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/map.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/reduce.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/reverse.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/difference.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/disjoint.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/intersection.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/superset.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/subset.js", "../../src/lib/vis/animated_pyramids/node_modules/d3-array/src/union.js"],
  "sourcesContent": ["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function bisector(f) {\n  let delta = f;\n  let compare1 = f;\n  let compare2 = f;\n\n  if (f.length !== 2) {\n    delta = (d, x) => f(d) - x;\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n", "export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n", "function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n", "export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}", "export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n", "export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n", "import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n", "export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n", "// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n", "export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n", "export default function identity(x) {\n  return x;\n}\n", "import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\n\nexport function flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\n\nexport function flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n", "export default function permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n", "import ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\n\nexport default function sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f] = F;\n  if ((f && f.length !== 2) || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascendingDefined(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascendingDefined(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(compareDefined(f));\n}\n\nexport function compareDefined(compare = ascending) {\n  if (compare === ascending) return ascendingDefined;\n  if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n  return (a, b) => {\n    const x = compare(a, b);\n    if (x || x === 0) return x;\n    return (compare(b, b) === 0) - (compare(a, a) === 0);\n  };\n}\n\nexport function ascendingDefined(a, b) {\n  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n}\n", "import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length !== 2\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "export default function constant(x) {\n  return () => x;\n}\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n", "import count from \"../count.js\";\n\nexport default function thresholdSturges(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n", "import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain\u2019s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don\u2019t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x != null && x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n", "export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n", "export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n", "import {ascendingDefined, compareDefined} from \"./sort.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare) {\n  compare = compare === undefined ? ascendingDefined : compareDefined(compare);\n\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n", "import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n", "import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function thresholdFreedmanDiaconis(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n", "import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function thresholdScott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n", "export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n", "export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n", "import quantile from \"./quantile.js\";\n\nexport default function median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n", "function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n", "export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n", "import {InternMap} from \"internmap\";\n\nexport default function mode(values, valueof) {\n  const counts = new InternMap();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        counts.set(value, (counts.get(value) || 0) + 1);\n      }\n    }\n  }\n  let modeValue;\n  let modeCount = 0;\n  for (const [value, count] of counts) {\n    if (count > modeCount) {\n      modeCount = count;\n      modeValue = value;\n    }\n  }\n  return modeValue;\n}\n", "export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n", "export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n", "import ascending from \"./ascending.js\";\nimport {ascendingDefined, compareDefined} from \"./sort.js\";\n\nexport default function rank(values, valueof = ascending) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  let V = Array.from(values);\n  const R = new Float64Array(V.length);\n  if (valueof.length !== 2) V = V.map(valueof), valueof = ascending;\n  const compareIndex = (i, j) => valueof(V[i], V[j]);\n  let k, r;\n  Uint32Array\n    .from(V, (_, i) => i)\n    .sort(valueof === ascending ? (i, j) => ascendingDefined(V[i], V[j]) : compareDefined(compareIndex))\n    .forEach((j, i) => {\n      const c = compareIndex(j, k === undefined ? j : k);\n      if (c >= 0) {\n        if (k === undefined || c > 0) k = j, r = i;\n        R[j] = r;\n      } else {\n        R[j] = NaN;\n      }\n    });\n  return R;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n", "import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n", "import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n", "import min from \"./min.js\";\n\nexport default function transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n", "import transpose from \"./transpose.js\";\n\nexport default function zip() {\n  return transpose(arguments);\n}\n", "export default function every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n", "export default function some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "export default function filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n", "export default function map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n", "export default function reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n", "export default function reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function difference(values, ...others) {\n  values = new InternSet(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new InternSet();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function intersection(values, ...others) {\n  values = new InternSet(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}\n", "export default function superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    const io = intern(o);\n    if (set.has(io)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      const ivalue = intern(value);\n      set.add(ivalue);\n      if (Object.is(io, ivalue)) break;\n    }\n  }\n  return true;\n}\n\nfunction intern(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n", "import superset from \"./superset.js\";\n\nexport default function subset(values, other) {\n  return superset(other, values);\n}\n", "import {InternSet} from \"internmap\";\n\nexport default function union(...others) {\n  const set = new InternSet();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n"],
  "mappings": "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",
  "names": []
}
