{
  "version": 3,
  "sources": ["../topojson-client/src/identity.js", "../topojson-client/src/transform.js", "../topojson-client/src/bbox.js", "../topojson-client/src/reverse.js", "../topojson-client/src/feature.js", "../topojson-client/src/stitch.js", "../topojson-client/src/mesh.js", "../topojson-client/src/merge.js", "../topojson-client/src/bisect.js", "../topojson-client/src/neighbors.js", "../topojson-client/src/untransform.js", "../topojson-client/src/quantize.js"],
  "sourcesContent": ["export default function(x) {\n  return x;\n}\n", "import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n", "import transform from \"./transform.js\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n", "export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n", "import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n", "export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n", "import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n", "import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    }).filter(function(arcs) {\n      return arcs.length > 0;\n    })\n  };\n}\n", "export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n", "import bisect from \"./bisect.js\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n", "import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n", "import bbox from \"./bbox.js\";\nimport untransform from \"./untransform.js\";\n\nexport default function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n}\n"],
  "mappings": ";AAAe,0BAAS,GAAG;AACzB,SAAO;AACT;;;ACAe,2BAAS,WAAW;AACjC,MAAI,aAAa;AAAM,WAAO;AAC9B,MAAI,IACA,IACA,KAAK,UAAU,MAAM,IACrB,KAAK,UAAU,MAAM,IACrB,KAAK,UAAU,UAAU,IACzB,KAAK,UAAU,UAAU;AAC7B,SAAO,SAAS,OAAO,GAAG;AACxB,QAAI,CAAC;AAAG,WAAK,KAAK;AAClB,QAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,SAAS,IAAI,MAAM,CAAC;AACjD,WAAO,KAAM,OAAM,MAAM,MAAM,KAAK;AACpC,WAAO,KAAM,OAAM,MAAM,MAAM,KAAK;AACpC,WAAO,IAAI;AAAG,aAAO,KAAK,MAAM,IAAI,EAAE;AACtC,WAAO;AAAA,EACT;AACF;;;AChBe,sBAAS,UAAU;AAChC,MAAI,IAAI,kBAAU,SAAS,SAAS,GAAG,KACnC,KAAK,UAAU,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC;AAE5C,qBAAmB,GAAG;AACpB,QAAI,EAAE,CAAC;AACP,QAAI,EAAE,KAAK;AAAI,WAAK,EAAE;AACtB,QAAI,EAAE,KAAK;AAAI,WAAK,EAAE;AACtB,QAAI,EAAE,KAAK;AAAI,WAAK,EAAE;AACtB,QAAI,EAAE,KAAK;AAAI,WAAK,EAAE;AAAA,EACxB;AAEA,wBAAsB,GAAG;AACvB,YAAQ,EAAE;AAAA,WACH;AAAsB,UAAE,WAAW,QAAQ,YAAY;AAAG;AAAA,WAC1D;AAAS,kBAAU,EAAE,WAAW;AAAG;AAAA,WACnC;AAAc,UAAE,YAAY,QAAQ,SAAS;AAAG;AAAA;AAAA,EAEzD;AAEA,WAAS,KAAK,QAAQ,SAAS,KAAK;AAClC,QAAI,IAAI,IAAI,IAAI,IAAI,QAAQ;AAC5B,WAAO,EAAE,IAAI,GAAG;AACd,UAAI,EAAE,IAAI,IAAI,CAAC;AACf,UAAI,EAAE,KAAK;AAAI,aAAK,EAAE;AACtB,UAAI,EAAE,KAAK;AAAI,aAAK,EAAE;AACtB,UAAI,EAAE,KAAK;AAAI,aAAK,EAAE;AACtB,UAAI,EAAE,KAAK;AAAI,aAAK,EAAE;AAAA,IACxB;AAAA,EACF,CAAC;AAED,OAAK,OAAO,SAAS,SAAS;AAC5B,iBAAa,SAAS,QAAQ,IAAI;AAAA,EACpC;AAEA,SAAO,CAAC,IAAI,IAAI,IAAI,EAAE;AACxB;;;ACtCe,yBAAS,OAAO,GAAG;AAChC,MAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,IAAI;AACjC,SAAO,IAAI,EAAE;AAAG,QAAI,MAAM,IAAI,MAAM,OAAO,MAAM,IAAI,MAAM,KAAK;AAClE;;;ACAe,yBAAS,UAAU,GAAG;AACnC,MAAI,OAAO,MAAM;AAAU,QAAI,SAAS,QAAQ;AAChD,SAAO,EAAE,SAAS,uBACZ,EAAC,MAAM,qBAAqB,UAAU,EAAE,WAAW,IAAI,SAAS,IAAG;AAAE,WAAO,QAAQ,UAAU,EAAC;AAAA,EAAG,CAAC,EAAC,IACpG,QAAQ,UAAU,CAAC;AAC3B;AAEA,iBAAiB,UAAU,GAAG;AAC5B,MAAI,KAAK,EAAE,IACP,OAAO,EAAE,MACT,aAAa,EAAE,cAAc,OAAO,CAAC,IAAI,EAAE,YAC3C,WAAW,OAAO,UAAU,CAAC;AACjC,SAAO,MAAM,QAAQ,QAAQ,OAAO,EAAC,MAAM,WAAW,YAAwB,SAAkB,IAC1F,QAAQ,OAAO,EAAC,MAAM,WAAW,IAAQ,YAAwB,SAAkB,IACnF,EAAC,MAAM,WAAW,IAAQ,MAAY,YAAwB,SAAkB;AACxF;AAEO,gBAAgB,UAAU,GAAG;AAClC,MAAI,iBAAiB,kBAAU,SAAS,SAAS,GAC7C,OAAO,SAAS;AAEpB,eAAa,GAAG,QAAQ;AACtB,QAAI,OAAO;AAAQ,aAAO,IAAI;AAC9B,aAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE,GAAG;AAClE,aAAO,KAAK,eAAe,EAAE,IAAI,CAAC,CAAC;AAAA,IACrC;AACA,QAAI,IAAI;AAAG,sBAAQ,QAAQ,CAAC;AAAA,EAC9B;AAEA,iBAAe,GAAG;AAChB,WAAO,eAAe,CAAC;AAAA,EACzB;AAEA,gBAAc,OAAM;AAClB,QAAI,SAAS,CAAC;AACd,aAAS,IAAI,GAAG,IAAI,MAAK,QAAQ,IAAI,GAAG,EAAE;AAAG,UAAI,MAAK,IAAI,MAAM;AAChE,QAAI,OAAO,SAAS;AAAG,aAAO,KAAK,OAAO,EAAE;AAC5C,WAAO;AAAA,EACT;AAEA,gBAAc,OAAM;AAClB,QAAI,SAAS,KAAK,KAAI;AACtB,WAAO,OAAO,SAAS;AAAG,aAAO,KAAK,OAAO,EAAE;AAC/C,WAAO;AAAA,EACT;AAEA,mBAAiB,OAAM;AACrB,WAAO,MAAK,IAAI,IAAI;AAAA,EACtB;AAEA,oBAAkB,IAAG;AACnB,QAAI,OAAO,GAAE,MAAM;AACnB,YAAQ;AAAA,WACD;AAAsB,eAAO,EAAC,MAAY,YAAY,GAAE,WAAW,IAAI,QAAQ,EAAC;AAAA,WAChF;AAAS,sBAAc,MAAM,GAAE,WAAW;AAAG;AAAA,WAC7C;AAAc,sBAAc,GAAE,YAAY,IAAI,KAAK;AAAG;AAAA,WACtD;AAAc,sBAAc,KAAK,GAAE,IAAI;AAAG;AAAA,WAC1C;AAAmB,sBAAc,GAAE,KAAK,IAAI,IAAI;AAAG;AAAA,WACnD;AAAW,sBAAc,QAAQ,GAAE,IAAI;AAAG;AAAA,WAC1C;AAAgB,sBAAc,GAAE,KAAK,IAAI,OAAO;AAAG;AAAA;AAC/C,eAAO;AAAA;AAElB,WAAO,EAAC,MAAY,YAAwB;AAAA,EAC9C;AAEA,SAAO,SAAS,CAAC;AACnB;;;ACrEe,wBAAS,UAAU,MAAM;AACtC,MAAI,eAAe,CAAC,GAChB,kBAAkB,CAAC,GACnB,gBAAgB,CAAC,GACjB,YAAY,CAAC,GACb,aAAa;AAGjB,OAAK,QAAQ,SAAS,GAAG,GAAG;AAC1B,QAAI,MAAM,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI;AACzC,QAAI,IAAI,SAAS,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI;AAC9C,UAAI,KAAK,EAAE,aAAa,KAAK,cAAc,GAAG,KAAK,KAAK;AAAA,IAC1D;AAAA,EACF,CAAC;AAED,OAAK,QAAQ,SAAS,GAAG;AACvB,QAAI,IAAI,KAAK,CAAC,GACV,QAAQ,EAAE,IACV,MAAM,EAAE,IACR,GAAG;AAEP,QAAI,IAAI,cAAc,QAAQ;AAC5B,aAAO,cAAc,EAAE;AACvB,QAAE,KAAK,CAAC;AACR,QAAE,MAAM;AACR,UAAI,IAAI,gBAAgB,MAAM;AAC5B,eAAO,gBAAgB,EAAE;AACzB,YAAI,KAAK,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC;AACjC,wBAAgB,GAAG,QAAQ,EAAE,SAAS,cAAc,GAAG,MAAM,EAAE,OAAO;AAAA,MACxE,OAAO;AACL,wBAAgB,EAAE,SAAS,cAAc,EAAE,OAAO;AAAA,MACpD;AAAA,IACF,WAAW,IAAI,gBAAgB,MAAM;AACnC,aAAO,gBAAgB,EAAE;AACzB,QAAE,QAAQ,CAAC;AACX,QAAE,QAAQ;AACV,UAAI,IAAI,cAAc,QAAQ;AAC5B,eAAO,cAAc,EAAE;AACvB,YAAI,KAAK,MAAM,IAAI,IAAI,EAAE,OAAO,CAAC;AACjC,wBAAgB,GAAG,QAAQ,EAAE,SAAS,cAAc,GAAG,MAAM,EAAE,OAAO;AAAA,MACxE,OAAO;AACL,wBAAgB,EAAE,SAAS,cAAc,EAAE,OAAO;AAAA,MACpD;AAAA,IACF,OAAO;AACL,UAAI,CAAC,CAAC;AACN,sBAAgB,EAAE,QAAQ,SAAS,cAAc,EAAE,MAAM,OAAO;AAAA,IAClE;AAAA,EACF,CAAC;AAED,gBAAc,GAAG;AACf,QAAI,MAAM,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI;AACtD,QAAI,SAAS;AAAW,WAAK,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,SAAS,IAAI;AAAE,WAAG,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG;AAAA,MAAI,CAAC;AAAA;AAC5F,WAAK,IAAI,IAAI,SAAS;AAC3B,WAAO,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AAAA,EACnC;AAEA,iBAAe,gBAAe,kBAAiB;AAC7C,aAAS,KAAK,gBAAe;AAC3B,UAAI,IAAI,eAAc;AACtB,aAAO,iBAAgB,EAAE;AACzB,aAAO,EAAE;AACT,aAAO,EAAE;AACT,QAAE,QAAQ,SAAS,GAAG;AAAE,qBAAa,IAAI,IAAI,CAAC,IAAI,KAAK;AAAA,MAAG,CAAC;AAC3D,gBAAU,KAAK,CAAC;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,eAAe,eAAe;AACpC,QAAM,iBAAiB,aAAa;AACpC,OAAK,QAAQ,SAAS,GAAG;AAAE,QAAI,CAAC,aAAa,IAAI,IAAI,CAAC,IAAI;AAAI,gBAAU,KAAK,CAAC,CAAC,CAAC;AAAA,EAAG,CAAC;AAEpF,SAAO;AACT;;;ACrEe,sBAAS,UAAU;AAChC,SAAO,OAAO,UAAU,SAAS,MAAM,MAAM,SAAS,CAAC;AACzD;AAEO,kBAAkB,UAAU,SAAQ,QAAQ;AACjD,MAAI,MAAM,GAAG;AACb,MAAI,UAAU,SAAS;AAAG,WAAO,YAAY,UAAU,SAAQ,MAAM;AAAA;AAChE,SAAK,IAAI,GAAG,OAAO,IAAI,MAAM,IAAI,SAAS,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AAAG,WAAK,KAAK;AACnF,SAAO,EAAC,MAAM,mBAAmB,MAAM,eAAO,UAAU,IAAI,EAAC;AAC/D;AAEA,qBAAqB,UAAU,SAAQ,QAAQ;AAC7C,MAAI,OAAO,CAAC,GACR,aAAa,CAAC,GACd;AAEJ,oBAAkB,GAAG;AACnB,QAAI,IAAI,IAAI,IAAI,CAAC,IAAI;AACrB,IAAC,YAAW,MAAO,YAAW,KAAK,CAAC,IAAI,KAAK,EAAC,GAAM,GAAG,KAAI,CAAC;AAAA,EAC9D;AAEA,oBAAkB,OAAM;AACtB,UAAK,QAAQ,QAAQ;AAAA,EACvB;AAEA,oBAAkB,OAAM;AACtB,UAAK,QAAQ,QAAQ;AAAA,EACvB;AAEA,oBAAkB,OAAM;AACtB,UAAK,QAAQ,QAAQ;AAAA,EACvB;AAEA,oBAAkB,GAAG;AACnB,YAAQ,OAAO,GAAG,EAAE;AAAA,WACb;AAAsB,UAAE,WAAW,QAAQ,QAAQ;AAAG;AAAA,WACtD;AAAc,iBAAS,EAAE,IAAI;AAAG;AAAA,WAChC;AAAA,WAAwB;AAAW,iBAAS,EAAE,IAAI;AAAG;AAAA,WACrD;AAAgB,iBAAS,EAAE,IAAI;AAAG;AAAA;AAAA,EAE3C;AAEA,WAAS,OAAM;AAEf,aAAW,QAAQ,UAAU,OACvB,SAAS,OAAO;AAAE,SAAK,KAAK,MAAM,GAAG,CAAC;AAAA,EAAG,IACzC,SAAS,OAAO;AAAE,QAAI,OAAO,MAAM,GAAG,GAAG,MAAM,MAAM,SAAS,GAAG,CAAC;AAAG,WAAK,KAAK,MAAM,GAAG,CAAC;AAAA,EAAG,CAAC;AAEnG,SAAO;AACT;;;ACjDA,wBAAwB,MAAM;AAC5B,MAAI,IAAI,IAAI,IAAI,KAAK,QAAQ,GAAG,IAAI,KAAK,IAAI,IAAI,OAAO;AACxD,SAAO,EAAE,IAAI;AAAG,QAAI,GAAG,IAAI,KAAK,IAAI,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AACnE,SAAO,KAAK,IAAI,IAAI;AACtB;AAEe,uBAAS,UAAU;AAChC,SAAO,OAAO,UAAU,UAAU,MAAM,MAAM,SAAS,CAAC;AAC1D;AAEO,mBAAmB,UAAU,SAAS;AAC3C,MAAI,gBAAgB,CAAC,GACjB,WAAW,CAAC,GACZ,SAAS,CAAC;AAEd,UAAQ,QAAQ,QAAQ;AAExB,oBAAkB,GAAG;AACnB,YAAQ,EAAE;AAAA,WACH;AAAsB,UAAE,WAAW,QAAQ,QAAQ;AAAG;AAAA,WACtD;AAAW,gBAAQ,EAAE,IAAI;AAAG;AAAA,WAC5B;AAAgB,UAAE,KAAK,QAAQ,OAAO;AAAG;AAAA;AAAA,EAElD;AAEA,mBAAiB,SAAS;AACxB,YAAQ,QAAQ,SAAS,MAAM;AAC7B,WAAK,QAAQ,SAAS,KAAK;AACzB,QAAC,eAAc,MAAM,MAAM,IAAI,CAAC,MAAM,QAAS,eAAc,OAAO,CAAC,IAAI,KAAK,OAAO;AAAA,MACvF,CAAC;AAAA,IACH,CAAC;AACD,aAAS,KAAK,OAAO;AAAA,EACvB;AAEA,gBAAc,MAAM;AAClB,WAAO,eAAe,OAAO,UAAU,EAAC,MAAM,WAAW,MAAM,CAAC,IAAI,EAAC,CAAC,EAAE,YAAY,EAAE;AAAA,EACxF;AAEA,WAAS,QAAQ,SAAS,SAAS;AACjC,QAAI,CAAC,QAAQ,GAAG;AACd,UAAI,QAAQ,CAAC,GACT,YAAY,CAAC,OAAO;AACxB,cAAQ,IAAI;AACZ,aAAO,KAAK,KAAK;AACjB,aAAO,UAAU,UAAU,IAAI,GAAG;AAChC,cAAM,KAAK,OAAO;AAClB,gBAAQ,QAAQ,SAAS,MAAM;AAC7B,eAAK,QAAQ,SAAS,KAAK;AACzB,0BAAc,MAAM,IAAI,CAAC,MAAM,KAAK,QAAQ,SAAS,UAAS;AAC5D,kBAAI,CAAC,SAAQ,GAAG;AACd,yBAAQ,IAAI;AACZ,0BAAU,KAAK,QAAO;AAAA,cACxB;AAAA,YACF,CAAC;AAAA,UACH,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,CAAC;AAED,WAAS,QAAQ,SAAS,SAAS;AACjC,WAAO,QAAQ;AAAA,EACjB,CAAC;AAED,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,OAAO,IAAI,SAAS,WAAU;AAClC,UAAI,OAAO,CAAC,GAAG;AAGf,gBAAS,QAAQ,SAAS,SAAS;AACjC,gBAAQ,QAAQ,SAAS,MAAM;AAC7B,eAAK,QAAQ,SAAS,KAAK;AACzB,gBAAI,cAAc,MAAM,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG;AAClD,mBAAK,KAAK,GAAG;AAAA,YACf;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AAAA,MACH,CAAC;AAGD,aAAO,eAAO,UAAU,IAAI;AAK5B,UAAK,KAAI,KAAK,UAAU,GAAG;AACzB,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACpD,cAAK,MAAK,KAAK,KAAK,EAAE,KAAK,GAAG;AAC5B,gBAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,IAAI;AAAA,UACnD;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,SAAS,MAAM;AACvB,aAAO,KAAK,SAAS;AAAA,IACvB,CAAC;AAAA,EACH;AACF;;;ACtGe,wBAAS,GAAG,GAAG;AAC5B,MAAI,KAAK,GAAG,KAAK,EAAE;AACnB,SAAO,KAAK,IAAI;AACd,QAAI,MAAM,KAAK,OAAO;AACtB,QAAI,EAAE,OAAO;AAAG,WAAK,MAAM;AAAA;AACtB,WAAK;AAAA,EACZ;AACA,SAAO;AACT;;;ACNe,2BAAS,SAAS;AAC/B,MAAI,eAAe,CAAC,GAChB,YAAY,QAAQ,IAAI,WAAW;AAAE,WAAO,CAAC;AAAA,EAAG,CAAC;AAErD,gBAAc,MAAM,IAAG;AACrB,SAAK,QAAQ,SAAS,GAAG;AACvB,UAAI,IAAI;AAAG,YAAI,CAAC;AAChB,UAAI,IAAI,aAAa;AACrB,UAAI;AAAG,UAAE,KAAK,EAAC;AAAA;AACV,qBAAa,KAAK,CAAC,EAAC;AAAA,IAC3B,CAAC;AAAA,EACH;AAEA,mBAAiB,MAAM,IAAG;AACxB,SAAK,QAAQ,SAAS,KAAK;AAAE,WAAK,KAAK,EAAC;AAAA,IAAG,CAAC;AAAA,EAC9C;AAEA,oBAAkB,GAAG,IAAG;AACtB,QAAI,EAAE,SAAS;AAAsB,QAAE,WAAW,QAAQ,SAAS,IAAG;AAAE,iBAAS,IAAG,EAAC;AAAA,MAAG,CAAC;AAAA,aAChF,EAAE,QAAQ;AAAc,mBAAa,EAAE,MAAM,EAAE,MAAM,EAAC;AAAA,EACjE;AAEA,MAAI,eAAe;AAAA,IACjB,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,SAAS;AAAA,IACT,cAAc,SAAS,MAAM,IAAG;AAAE,WAAK,QAAQ,SAAS,KAAK;AAAE,gBAAQ,KAAK,EAAC;AAAA,MAAG,CAAC;AAAA,IAAG;AAAA,EACtF;AAEA,UAAQ,QAAQ,QAAQ;AAExB,WAAS,KAAK,cAAc;AAC1B,aAAS,UAAU,aAAa,IAAI,IAAI,QAAQ,QAAQ,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACzE,eAAS,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC9B,YAAI,KAAK,QAAQ,IAAI,KAAK,QAAQ,IAAI;AACtC,YAAK,KAAI,UAAU,KAAK,IAAI,eAAO,GAAG,EAAE,OAAO;AAAI,YAAE,OAAO,GAAG,GAAG,EAAE;AACpE,YAAK,KAAI,UAAU,KAAK,IAAI,eAAO,GAAG,EAAE,OAAO;AAAI,YAAE,OAAO,GAAG,GAAG,EAAE;AAAA,MACtE;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;;;AC1Ce,6BAAS,WAAW;AACjC,MAAI,aAAa;AAAM,WAAO;AAC9B,MAAI,IACA,IACA,KAAK,UAAU,MAAM,IACrB,KAAK,UAAU,MAAM,IACrB,KAAK,UAAU,UAAU,IACzB,KAAK,UAAU,UAAU;AAC7B,SAAO,SAAS,OAAO,GAAG;AACxB,QAAI,CAAC;AAAG,WAAK,KAAK;AAClB,QAAI,IAAI,GACJ,IAAI,MAAM,QACV,SAAS,IAAI,MAAM,CAAC,GACpB,KAAK,KAAK,MAAO,OAAM,KAAK,MAAM,EAAE,GACpC,KAAK,KAAK,MAAO,OAAM,KAAK,MAAM,EAAE;AACxC,WAAO,KAAK,KAAK,IAAI,KAAK;AAC1B,WAAO,KAAK,KAAK,IAAI,KAAK;AAC1B,WAAO,IAAI;AAAG,aAAO,KAAK,MAAM,IAAI,EAAE;AACtC,WAAO;AAAA,EACT;AACF;;;ACnBe,0BAAS,UAAU,WAAW;AAC3C,MAAI,SAAS;AAAW,UAAM,IAAI,MAAM,mBAAmB;AAE3D,MAAI,CAAC,aAAa,CAAC,UAAU,OAAO;AAClC,QAAI,CAAG,MAAI,KAAK,MAAM,SAAS,MAAM;AAAI,YAAM,IAAI,MAAM,mBAAc;AACvE,UAAM,SAAS,QAAQ,aAAK,QAAQ;AACpC,QAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI;AACxD,gBAAY,EAAC,OAAO,CAAC,KAAK,KAAM,MAAK,MAAO,KAAI,KAAK,GAAG,KAAK,KAAM,MAAK,MAAO,KAAI,KAAK,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,EAAC;AAAA,EACjH,OAAO;AACL,UAAM,SAAS;AAAA,EACjB;AAEA,MAAI,IAAI,oBAAY,SAAS,GAAG,KAAK,KAAK,SAAS,SAAS,SAAS,UAAU,CAAC;AAEhF,yBAAuB,OAAO;AAC5B,WAAO,EAAE,KAAK;AAAA,EAChB;AAEA,4BAA0B,OAAO;AAC/B,QAAI;AACJ,YAAQ,MAAM;AAAA,WACP;AAAsB,iBAAS,EAAC,MAAM,sBAAsB,YAAY,MAAM,WAAW,IAAI,gBAAgB,EAAC;AAAG;AAAA,WACjH;AAAS,iBAAS,EAAC,MAAM,SAAS,aAAa,cAAc,MAAM,WAAW,EAAC;AAAG;AAAA,WAClF;AAAc,iBAAS,EAAC,MAAM,cAAc,aAAa,MAAM,YAAY,IAAI,aAAa,EAAC;AAAG;AAAA;AAC5F,eAAO;AAAA;AAElB,QAAI,MAAM,MAAM;AAAM,aAAO,KAAK,MAAM;AACxC,QAAI,MAAM,QAAQ;AAAM,aAAO,OAAO,MAAM;AAC5C,QAAI,MAAM,cAAc;AAAM,aAAO,aAAa,MAAM;AACxD,WAAO;AAAA,EACT;AAEA,uBAAqB,OAAO;AAC1B,QAAI,IAAI,GAAG,IAAI,GAAG,KAAI,MAAM,QAAQ,GAAG,SAAS,IAAI,MAAM,EAAC;AAC3D,WAAO,KAAK,EAAE,MAAM,IAAI,CAAC;AACzB,WAAO,EAAE,IAAI;AAAG,UAAK,KAAI,EAAE,MAAM,IAAI,CAAC,GAAG,MAAM,EAAE;AAAI,eAAO,OAAO;AACnE,QAAI,MAAM;AAAG,aAAO,OAAO,CAAC,GAAG,CAAC;AAChC,WAAO,SAAS;AAChB,WAAO;AAAA,EACT;AAEA,OAAK,OAAO;AAAQ,YAAQ,OAAO,iBAAiB,OAAO,IAAI;AAE/D,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN;AAAA,IACA,SAAS;AAAA,IACT,MAAM,SAAS,KAAK,IAAI,WAAW;AAAA,EACrC;AACF;",
  "names": []
}
